//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication.VehicleService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SoapVehicle", Namespace="http://schemas.datacontract.org/2004/07/VehicleService")]
    [System.SerializableAttribute()]
    public partial class SoapVehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberPlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RentalChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberPlate {
            get {
                return this.NumberPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberPlateField, value) != true)) {
                    this.NumberPlateField = value;
                    this.RaisePropertyChanged("NumberPlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RentalCharge {
            get {
                return this.RentalChargeField;
            }
            set {
                if ((this.RentalChargeField.Equals(value) != true)) {
                    this.RentalChargeField = value;
                    this.RaisePropertyChanged("RentalCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VehicleService.IVehicleService")]
    public interface IVehicleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/search", ReplyAction="http://tempuri.org/IVehicleService/searchResponse")]
        ConsoleApplication.VehicleService.SoapVehicle[] search(string numberPlate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/create", ReplyAction="http://tempuri.org/IVehicleService/createResponse")]
        ConsoleApplication.VehicleService.SoapVehicle create(string numberPlate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/list", ReplyAction="http://tempuri.org/IVehicleService/listResponse")]
        ConsoleApplication.VehicleService.SoapVehicle[] list();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleServiceChannel : ConsoleApplication.VehicleService.IVehicleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleServiceClient : System.ServiceModel.ClientBase<ConsoleApplication.VehicleService.IVehicleService>, ConsoleApplication.VehicleService.IVehicleService {
        
        public VehicleServiceClient() {
        }
        
        public VehicleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApplication.VehicleService.SoapVehicle[] search(string numberPlate) {
            return base.Channel.search(numberPlate);
        }
        
        public ConsoleApplication.VehicleService.SoapVehicle create(string numberPlate) {
            return base.Channel.create(numberPlate);
        }
        
        public ConsoleApplication.VehicleService.SoapVehicle[] list() {
            return base.Channel.list();
        }
    }
}
